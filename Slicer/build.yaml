requires:
  - name: "SlicerBuildEnvironment_{{ regexSplit ".*_" .Values.name -1 | last }}"
    category: "{{ .Values.category }}"
    version: "0.1"
env:
  - CCACHE_DIR=/var/cache/SlicerBuildFactory/{{ .Values.category }}/{{ .Values.name }}
  - CCACHE_COMPILERCHECK=content
  - CCACHE_LOGFILE=/var/log/ccache
  - CCACHE_SLOPPINESS=include_file_ctime,include_file_mtime
steps:
  - luet repo update || echo "No repo available"
  - luet install {{ .Values.category }}/Slicer_ccache_{{ regexSplit ".*_" .Values.name -1 | last }} -y || echo "No ccache available"
  - mkdir -p ${CCACHE_DIR}
  - mkdir -p ${HOME}/Dashboards/Experimental/
  # Get the source code
  - cd ${HOME}/Dashboards/Experimental/ && git clone {{ .Values.slicer_url }} Slicer-0 --depth 1
  - cd ${HOME}/Dashboards/Experimental/Slicer-0 && git checkout {{ .Values.slicer_branch }}
  # Configure the build
  - mkdir -p ${HOME}/Dashboards/Experimental/Slicer-0-build
  - cp ./files/SlicerDashboardScript.tpl.cmake ${HOME}/Dashboards/Experimental/Slicer-0-build/SlicerDashboardScript.cmake
  - sed -i 's/__ORGANIZATION__/OUS/g' ${HOME}/Dashboards/Experimental/Slicer-0-build/SlicerDashboardScript.cmake
  - sed -i 's/__HOSTNAME__/SlicerBuidFactory/g' ${HOME}/Dashboards/Experimental/Slicer-0-build/SlicerDashboardScript.cmake
  - lsb_release --id|awk -F":\t" '{print $2}' | xargs -I{} sed -i 's/__OPERATINGSYSTEM__/{}/g' ${HOME}/Dashboards/Experimental/Slicer-0-build/SlicerDashboardScript.cmake
  - sed -i 's/__SCRIPTMODE__/Experimental/g' ${HOME}/Dashboards/Experimental/Slicer-0-build/SlicerDashboardScript.cmake
  - sed -i 's/__SLICERRELEASETYPE__/Experimental/g' ${HOME}/Dashboards/Experimental/Slicer-0-build/SlicerDashboardScript.cmake
  - gcc -v 2>&1 | tail -n1 | xargs -I{} sed -i 's/__COMPILER__/{}/g' ${HOME}/Dashboards/Experimental/Slicer-0-build/SlicerDashboardScript.cmake
  - sed -i 's/__CTESTBUILDFLAGS__/-j{{ .Values.jobs }}/g' ${HOME}/Dashboards/Experimental/Slicer-0-build/SlicerDashboardScript.cmake
  - sed -i 's/__CMAKECCOMPILER__/\/usr\/local\/bin\/cc/g' ${HOME}/Dashboards/Experimental/Slicer-0-build/SlicerDashboardScript.cmake
  - sed -i 's/__CMAKECXXCOMPILER__/\/usr\/local\/bin\/c++/g' ${HOME}/Dashboards/Experimental/Slicer-0-build/SlicerDashboardScript.cmake
  - sed -i 's/__CCACHEDIR__/\/var\/cache\/SlicerBuildFactory\/{{ .Values.category }}\/{{ .Values.name }}/g' ${HOME}/Dashboards/Experimental/Slicer-0-build/SlicerDashboardScript.cmake
  - cd ${HOME}/Dashboards/Experimental/Slicer-0-build && xvfb-run ctest -S SlicerDashboardScript.cmake -VV
  # Install the project
  # - cd /opt && tar xvzf /luetbuild/Slicer/{{ .Values.slicer_build }}/Slicer-build/Slicer*-amd64.tar.gz
  # Configure the build
  #
  # # Configure project
  # - mkdir Slicer/{{ .Values.slicer_build }}
  # - cd Slicer/{{ .Values.slicer_build }} && cmake -DCMAKE_BUILD_TYPE:STRING={{ .Values.slicer_build }} -DBUILD_TESTING:BOOL={{ .Values.slicer_testing }} ../ -DCMAKE_C_COMPILER=/usr/local/bin/cc -DCMAKE_CXX_COMPILER=/usr/local/bin/c++
  # # Build the project
  # - cd Slicer/{{ .Values.slicer_build }} && make -j{{ .Values.jobs }}
  # - cd Slicer/{{ .Values.slicer_build }}/Slicer-build && cpack -G TGZ
  # # Testing
  # {{ if eq .Values.slicer_testing "ON" }}
  # - cd Slicer/{{ .Values.slicer_build }}/Slicer-build && xvfb-run ctest || echo "WARNING -- Not all tests passed"
  # {{ end }}
  # # Install the project
  # - cd /opt && tar xvzf /luetbuild/Slicer/{{ .Values.slicer_build }}/Slicer-build/Slicer*-amd64.tar.gz
subpackages:
  - name: "Slicer_ccache_{{ regexSplit ".*_" .Values.name -1 | last }}"
    category: "{{ .Values.category }}"
    version: "0.1"
    includes:
      - /var$
      - /var/cache$
      - /var/cache/SlicerBuildFactory$
      - /var/cache/SlicerBuildFactory/{{ .Values.category }}$
      - /var/cache/SlicerBuildFactory/{{ .Values.category }}/{{ .Values.name }}$
      - /var/cache/SlicerBuildFactory/{{ .Values.category }}/{{ .Values.name }}/.*
